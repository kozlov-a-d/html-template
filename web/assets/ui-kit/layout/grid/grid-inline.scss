/********************************************************************************************/
/* Utitilites-Grid--------------------------------------------------------------------------*/
/* адаптивна сетка                                                                          */
/* Основная сетка строится на flexbox'ах  + фолбэки на inline-block'ах                      */
/* Фолбэки цепляются по классу no-flexbox, который добавляет modernizer                     */
/********************************************************************************************/
$grid-type: float;
$grid-gap: 10px;
$grid-screen: (
        xs: 320px,   // iphone5 в портретной ориентации
        sm: 420px,   // большине телефоны  в портретной ориентации
        md: 768px,   // планшеты в портретной ориентации / телефоны в альбомной
        lg: 1024px,  // планшеты в альбомной ориентации
        xl: 1280px   //
);



/*==========================================================================================*/
/*  Основа  */
/*==========================================================================================*/
.grid{
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  margin-left: -$grid-gap/2;
  margin-right: -$grid-gap/2;

  [class *= "col-"] {
    margin-left: $grid-gap/2;
    margin-right: $grid-gap/2;
    margin-bottom: $grid-gap;
  }

  .row{
    display: flex;
    width: 100%;
  }
}
/*==========================================================================================*/
/*  Генерируем классы для инлайнового варианта  */
/*==========================================================================================*/
@mixin grid-sizer($screen-prefix){
  $total-columns: 6; // число колонок
  $col-widths: ();   // вспомогательный массив, в котором будут храниться размеры
  // генерируем дробные размеры
  @for $i from 1 through $total-columns {
    @for $j from 1 through $i {
      // определяем текущий размеры
      $width: ($j/$i);
      // если такого размера ещё не было, то создаём стили
      @if not index($col-widths, $width) {
        $width-col: 'calc(' + $width * 100% + ' - ' +  $grid-gap + ')';
        // разделение на медиа
        @if($screen-prefix != ''){
          .col-#{$screen-prefix}-#{$j}-#{$i} {
            width:  unquote($width-col);
          }
        }
          // и стандартные
        @else {
          .col-#{$j}-#{$i} {
            width:  unquote($width-col);
          }
        }

        // и записываем размер в массив существуюих размеров
        $col-widths: append($col-widths, $width, comma);
      }

    }
  }
}
@mixin grid-sizer-media($grid-screen){
  // проходим про всем разрешениям и генерируем медиа запросы
  @each $screen-prefix, $screen-size in $grid-screen {
    @media (max-width: $screen-size) {
      @include grid-sizer($screen-prefix);
    }
  }

}

@include grid-sizer('');
/*==========================================================================================*/
/*  media query  */
/*==========================================================================================*/
@include grid-sizer-media($grid-screen);
@media (max-width: 320px) {
  .grid {
    overflow: hidden; }

}

/*==========================================================================================*/
/*  fallback  */
/*==========================================================================================*/
.no-flexbox{
  .grid{
    display:block;
    font-size: 0;

    [class *= "col-"] {
      display: inline-block;
      font-size: $font-size-base;
    }

    .row{
      display:block;
    }
  }

}
